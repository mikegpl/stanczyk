// echo.proto
syntax = "proto3";
package stanczyk;

//option java_package = "agh.sm.facedetection.proto";
option java_generic_services = true;

message FindRequest {
  string fileName = 1;
  string base64Image = 2;
}

message DetectedFaceData {
  int64 x = 1;
  int64 y = 2;
  int64 w = 3;
  int64 h = 4;
}

message FindResult {
  repeated DetectedFaceData data = 1;
}

message FindAndExchangeRequest {
  FindRequest request = 1;
  DevicesKnowledge devicesKnowledge = 2;
}

message FindAndExchangeResult {
  FindResult result = 1;
  KnowledgeBatch knowledge = 2;
}

service StanczykTaskExecutionService {
  rpc FindFaces (FindRequest) returns (FindResult) {}
  rpc FindFacesAndExchangeKnowledge (FindAndExchangeRequest) returns (FindAndExchangeResult) {}
}

message KnowledgeBatch {
  CloudKnowledge cloudKnowledge = 1;
  DevicesKnowledge devicesKnowledge = 2;
}

message CloudKnowledge {
  repeated CloudExecutionMetadata data = 1;
}

message CloudExecutionMetadata {
  CloudExecutorMetadata cloudExecutorMetadata = 1;
  TaskMetadata taskMetadata = 2;
  int64 executionTimeMs = 3;
}

message CloudExecutorMetadata {
  double cpuLoad = 1;
  double ramAvailable = 2;
  int32 dayOfWeek = 3;
  int32 hourOfDay = 4;
}

message DevicesKnowledge {
  repeated DeviceExecutionMetadata data = 1;
}

message DeviceExecutionMetadata {
  DeviceExecutorMetadata deviceExecutorMetadata = 1;
  TaskMetadata taskMetadata = 2;
  int64 executionTimeMs = 3;
}

message DeviceExecutorMetadata {
  int64 cpuRating = 1;
  int64 networkRating = 2;
  int64 memoryAvailable = 3;
  int64 totalMemory = 4;
  int64 sdkScore = 5;
  double batteryPercentage = 6;
  // todo - add more executor metadata (e.g. current cpu usage)
}

message TaskMetadata {
  int64 problemSize = 1;
}

service StanczykKnowledgeExchangeService {
  rpc ExchangeKnowledge (DevicesKnowledge) returns (KnowledgeBatch) {}
}